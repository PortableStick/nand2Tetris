// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
  IN a[16], b[16], c[16], d[16], sel[2];
  OUT out[16];

  PARTS:
  // Put your code here:

	Mux(a=a[0], b=c[0], sel=sel[1], out=out01);
    Mux(a=b[0], b=d[0], sel=sel[1], out=out02);
    Mux(a=out01, b=out02, sel=sel[0], out=out[0]);

	Mux(a=a[1], b=c[1], sel=sel[1], out=out11);
    Mux(a=b[1], b=d[1], sel=sel[1], out=out12);
    Mux(a=out11, b=out12, sel=sel[0], out=out[1]);

	Mux(a=a[2], b=c[2], sel=sel[1], out=out21);
    Mux(a=b[2], b=d[2], sel=sel[1], out=out22);
    Mux(a=out21, b=out22, sel=sel[0], out=out[2]);

	Mux(a=a[3], b=c[3], sel=sel[1], out=out31);
    Mux(a=b[3], b=d[3], sel=sel[1], out=out32);
    Mux(a=out31, b=out32, sel=sel[0], out=out[3]);

	Mux(a=a[4], b=c[4], sel=sel[1], out=out41);
    Mux(a=b[4], b=d[4], sel=sel[1], out=out42);
    Mux(a=out41, b=out42, sel=sel[0], out=out[4]);

	Mux(a=a[5], b=c[5], sel=sel[1], out=out51);
    Mux(a=b[5], b=d[5], sel=sel[1], out=out52);
    Mux(a=out51, b=out52, sel=sel[0], out=out[5]);

	Mux(a=a[6], b=c[6], sel=sel[1], out=out61);
    Mux(a=b[6], b=d[6], sel=sel[1], out=out62);
    Mux(a=out61, b=out62, sel=sel[0], out=out[6]);

	Mux(a=a[7], b=c[7], sel=sel[1], out=out71);
    Mux(a=b[7], b=d[7], sel=sel[1], out=out72);
    Mux(a=out71, b=out72, sel=sel[0], out=out[7]);

	Mux(a=a[8], b=c[8], sel=sel[1], out=out81);
    Mux(a=b[8], b=d[8], sel=sel[1], out=out82);
    Mux(a=out81, b=out82, sel=sel[0], out=out[8]);

	Mux(a=a[9], b=c[9], sel=sel[1], out=out91);
    Mux(a=b[9], b=d[9], sel=sel[1], out=out92);
    Mux(a=out91, b=out92, sel=sel[0], out=out[9]);

	Mux(a=a[10], b=c[10], sel=sel[1], out=out101);
    Mux(a=b[10], b=d[10], sel=sel[1], out=out102);
    Mux(a=out101, b=out102, sel=sel[0], out=out[10]);

	Mux(a=a[11], b=c[11], sel=sel[1], out=out111);
    Mux(a=b[11], b=d[11], sel=sel[1], out=out112);
    Mux(a=out111, b=out112, sel=sel[0], out=out[11]);

	Mux(a=a[12], b=c[12], sel=sel[1], out=out121);
    Mux(a=b[12], b=d[12], sel=sel[1], out=out122);
    Mux(a=out121, b=out122, sel=sel[0], out=out[12]);

	Mux(a=a[13], b=c[13], sel=sel[1], out=out131);
    Mux(a=b[13], b=d[13], sel=sel[1], out=out132);
    Mux(a=out131, b=out132, sel=sel[0], out=out[13]);

	Mux(a=a[14], b=c[14], sel=sel[1], out=out141);
    Mux(a=b[14], b=d[14], sel=sel[1], out=out142);
    Mux(a=out141, b=out142, sel=sel[0], out=out[14]);

	Mux(a=a[15], b=c[15], sel=sel[1], out=out151);
    Mux(a=b[15], b=d[15], sel=sel[1], out=out152);
    Mux(a=out151, b=out152, sel=sel[0], out=out[15]);

}
